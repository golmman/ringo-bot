/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/util/node_modules/inherits/inherits_browser.js":
/*!*********************************************************************!*\
  !*** ./node_modules/util/node_modules/inherits/inherits_browser.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/util/node_modules/inherits/inherits_browser.js?");

/***/ }),

/***/ "./node_modules/util/support/isBufferBrowser.js":
/*!******************************************************!*\
  !*** ./node_modules/util/support/isBufferBrowser.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n//# sourceURL=webpack:///./node_modules/util/support/isBufferBrowser.js?");

/***/ }),

/***/ "./node_modules/util/util.js":
/*!***********************************!*\
  !*** ./node_modules/util/util.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ \"./node_modules/util/support/isBufferBrowser.js\");\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(/*! inherits */ \"./node_modules/util/node_modules/inherits/inherits_browser.js\");\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/util/util.js?");

/***/ }),

/***/ "./src/board.js":
/*!**********************!*\
  !*** ./src/board.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const { intDiv } = __webpack_require__(/*! ./util */ \"./src/util.js\");\nconst {\n    EMPTY,\n    BLUE_DISK,\n    RED_DISK,\n    BLUE_RING,\n    RED_RING,\n    GRID_SIZE,\n    GRID_SIZE2,\n} = __webpack_require__(/*! ./constants */ \"./src/constants.js\");\n\nfunction getCoords(gridIndex) {\n    return {\n        x: gridIndex % GRID_SIZE,\n        y: intDiv(gridIndex, GRID_SIZE),\n    };\n}\n\nfunction getGridIndex({ x, y }) {\n    return GRID_SIZE * y + x;\n}\n\nfunction setGridPiece(board, piece, gridIndex) {\n    board.grid[gridIndex] = piece;\n}\n\nfunction unsetGridPiece(board, gridIndex) {\n    const oldPiece = board.grid[gridIndex];\n    board.grid[gridIndex] = EMPTY;\n    return oldPiece;\n}\n\nfunction deleteBlueDisk(board, gridIndex) {\n    const oldPiece = unsetGridPiece(board, gridIndex);\n    board.blueDisks.delete(gridIndex);\n    return oldPiece;\n}\n\nfunction deleteRedDisk(board, gridIndex) {\n    const oldPiece = unsetGridPiece(board, gridIndex);\n    board.redDisks.delete(gridIndex);\n    return oldPiece;\n}\n\nfunction deleteBlueRing(board, gridIndex) {\n    const oldPiece = unsetGridPiece(board, gridIndex);\n    board.blueRings.delete(gridIndex);\n    return oldPiece;\n}\n\nfunction deleteRedRing(board, gridIndex) {\n    const oldPiece = unsetGridPiece(board, gridIndex);\n    board.redRings.delete(gridIndex);\n    return oldPiece;\n}\n\nfunction addBlueDisk(board, disk, gridIndex) {\n    setGridPiece(board, disk, gridIndex);\n    board.blueDisks.add(gridIndex);\n}\n\nfunction addRedDisk(board, disk, gridIndex) {\n    setGridPiece(board, disk, gridIndex);\n    board.redDisks.add(gridIndex);\n}\n\nfunction addBlueRing(board, ring, gridIndex) {\n    setGridPiece(board, ring, gridIndex);\n    board.blueRings.add(gridIndex);\n}\n\nfunction addRedRing(board, ring, gridIndex) {\n    setGridPiece(board, ring, gridIndex);\n    board.redRings.add(gridIndex);\n}\n\nfunction initBoard(board) {\n    board.grid = new Array(GRID_SIZE2).fill(EMPTY);\n\n    const gridCenter = GRID_SIZE / 2;\n\n    addBlueRing(board, BLUE_RING + 0, getGridIndex({ x: gridCenter, y: gridCenter }));\n    addBlueRing(board, BLUE_RING + 1, getGridIndex({ x: gridCenter + 2, y: gridCenter }));\n    addBlueRing(board, BLUE_RING + 2, getGridIndex({ x: gridCenter, y: gridCenter + 2 }));\n    addBlueRing(board, BLUE_RING + 3, getGridIndex({ x: gridCenter + 2, y: gridCenter + 2 }));\n\n    addRedRing(board, RED_RING + 0, getGridIndex({ x: gridCenter + 1, y: gridCenter }));\n    addRedRing(board, RED_RING + 1, getGridIndex({ x: gridCenter, y: gridCenter + 1 }));\n    addRedRing(board, RED_RING + 2, getGridIndex({ x: gridCenter + 2, y: gridCenter + 1 }));\n    addRedRing(board, RED_RING + 3, getGridIndex({ x: gridCenter + 1, y: gridCenter + 2 }));\n\n    addBlueDisk(board, BLUE_DISK + 0, getGridIndex({ x: gridCenter + 3, y: gridCenter + 0 }));\n    addBlueDisk(board, BLUE_DISK + 1, getGridIndex({ x: gridCenter + 4, y: gridCenter + 0 }));\n    addBlueDisk(board, BLUE_DISK + 2, getGridIndex({ x: gridCenter + 5, y: gridCenter + 0 }));\n    addBlueDisk(board, BLUE_DISK + 3, getGridIndex({ x: gridCenter + 3, y: gridCenter + 1 }));\n    addBlueDisk(board, BLUE_DISK + 4, getGridIndex({ x: gridCenter + 4, y: gridCenter + 1 }));\n    addBlueDisk(board, BLUE_DISK + 5, getGridIndex({ x: gridCenter + 5, y: gridCenter + 1 }));\n    addBlueDisk(board, BLUE_DISK + 6, getGridIndex({ x: gridCenter + 3, y: gridCenter + 2 }));\n    addBlueDisk(board, BLUE_DISK + 7, getGridIndex({ x: gridCenter + 4, y: gridCenter + 2 }));\n    addBlueDisk(board, BLUE_DISK + 8, getGridIndex({ x: gridCenter + 5, y: gridCenter + 2 }));\n    addBlueDisk(board, BLUE_DISK + 9, getGridIndex({ x: gridCenter + 6, y: gridCenter + 2 }));\n\n    addRedDisk(board, RED_DISK + 0, getGridIndex({ y: gridCenter + 3, x: gridCenter + 0 }));\n    addRedDisk(board, RED_DISK + 1, getGridIndex({ y: gridCenter + 4, x: gridCenter + 0 }));\n    addRedDisk(board, RED_DISK + 2, getGridIndex({ y: gridCenter + 5, x: gridCenter + 0 }));\n    addRedDisk(board, RED_DISK + 3, getGridIndex({ y: gridCenter + 3, x: gridCenter + 1 }));\n    addRedDisk(board, RED_DISK + 4, getGridIndex({ y: gridCenter + 4, x: gridCenter + 1 }));\n    addRedDisk(board, RED_DISK + 5, getGridIndex({ y: gridCenter + 5, x: gridCenter + 1 }));\n    addRedDisk(board, RED_DISK + 6, getGridIndex({ y: gridCenter + 3, x: gridCenter + 2 }));\n    addRedDisk(board, RED_DISK + 7, getGridIndex({ y: gridCenter + 4, x: gridCenter + 2 }));\n    addRedDisk(board, RED_DISK + 8, getGridIndex({ y: gridCenter + 5, x: gridCenter + 2 }));\n    addRedDisk(board, RED_DISK + 9, getGridIndex({ y: gridCenter + 6, x: gridCenter + 2 }));\n}\n\nfunction isBlueDisk(piece) {\n    return intDiv(piece, 1000) === 1;\n}\n\nfunction isRedDisk(piece) {\n    return intDiv(piece, 1000) === 2;\n}\n\nfunction isBlueRing(piece) {\n    return intDiv(piece, 1000) === 3;\n}\n\nfunction isRedRing(piece) {\n    return intDiv(piece, 1000) === 4;\n}\n\nmodule.exports = {\n    addBlueDisk,\n    addBlueRing,\n    addRedDisk,\n    addRedRing,\n    deleteBlueDisk,\n    deleteBlueRing,\n    deleteRedDisk,\n    deleteRedRing,\n    getCoords,\n    initBoard,\n    isBlueDisk,\n    isBlueRing,\n    isRedDisk,\n    isRedRing,\n};\n\n\n//# sourceURL=webpack:///./src/board.js?");

/***/ }),

/***/ "./src/constants.js":
/*!**************************!*\
  !*** ./src/constants.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n    EMPTY: 0,\n    MARKED: 1,\n    BLUE_DISK: 1000,\n    RED_DISK: 2000,\n    BLUE_RING: 3000,\n    RED_RING: 4000,\n\n    MAX_DISKS: 10,\n    MAX_RINGS: 4,\n    DROP_DISK: -1,\n\n    GRID_SIZE: 256,\n    GRID_SIZE2: 256 * 256,\n\n    BLUE: 0,\n    RED: 1,\n\n    OPPONENT_PHASE: 0,\n    PICK_DISK_PHASE: 1,\n    DROP_DISK_PHASE: 2,\n    DROP_RING_PHASE: 3,\n};\n\n\n//# sourceURL=webpack:///./src/constants.js?");

/***/ }),

/***/ "./src/context.js":
/*!************************!*\
  !*** ./src/context.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const constants = __webpack_require__(/*! ./constants */ \"./src/constants.js\");\n\nconst context = {};\n\nfunction resetContext() {\n    // TODO: move to draw namespace\n    context.canvas = null;\n\n    // TODO: rename to event\n    context.events = {\n        mouseWheel: null,\n        mouseDown: null,\n        mouseMove: {\n            clientX: 0,\n            clientY: 0,\n        },\n        isMouseDown: false,\n\n        phase: constants.OPPONENT_PHASE,\n    };\n\n    context.draw = {\n        move: {\n            diskFrom: -1,\n            diskTo: -1,\n            ringTo: -1,\n        },\n        generatedMoves: null,\n        pickDiskMoves: null,\n        dropDiskMoves: null,\n        dropRingMoves: null,\n    };\n\n    context.board = {\n        // TODO: move to draw namespace\n        canvasX: 100,\n        canvasY: 100,\n        tileSize: 100,\n\n        botColor: constants.RED,\n        isBlueTurn: true,\n        activeDisks: null,\n\n        // used to mark duplicate ring targets during move generation\n        duplicationMarkers: [],\n\n        grid: [],\n        blueDisks: new Set(),\n        redDisks: new Set(),\n        blueRings: new Set(),\n        redRings: new Set(),\n    };\n}\n\nmodule.exports = {\n    context,\n    resetContext,\n};\n\n\n//# sourceURL=webpack:///./src/context.js?");

/***/ }),

/***/ "./src/draw.js":
/*!*********************!*\
  !*** ./src/draw.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const { isBlueRing } = __webpack_require__(/*! ./board */ \"./src/board.js\");\nconst { context } = __webpack_require__(/*! ./context */ \"./src/context.js\");\nconst { getCoords } = __webpack_require__(/*! ./board */ \"./src/board.js\");\nconst {\n    GRID_SIZE,\n    OPPONENT_PHASE,\n    PICK_DISK_PHASE,\n    DROP_DISK_PHASE,\n    DROP_RING_PHASE,\n} = __webpack_require__(/*! ./constants */ \"./src/constants.js\");\n\nfunction convertBoardToCanvasCoords({ x, y }) {\n    const { canvasX, canvasY, tileSize } = context.board;\n    const tx = x - GRID_SIZE / 2;\n    const ty = y - GRID_SIZE / 2;\n\n    return {\n        x: canvasX + tx * tileSize,\n        y: canvasY + ty * tileSize,\n    };\n}\n\nfunction drawBlueDisk(ctx, { x, y }) {\n    const { tileSize } = context.board;\n    ctx.beginPath();\n    ctx.fillStyle = 'rgb(24, 24, 160)';\n    ctx.arc(\n        x + tileSize / 2,\n        y + tileSize / 2,\n        0.3 * tileSize,\n        0, 2 * Math.PI,\n    );\n    ctx.fill();\n}\n\nfunction drawRedDisk(ctx, { x, y }) {\n    const { tileSize } = context.board;\n    ctx.beginPath();\n    ctx.fillStyle = 'rgb(160, 24, 24)';\n    ctx.arc(\n        x + tileSize / 2,\n        y + tileSize / 2,\n        0.3 * tileSize,\n        0, 2 * Math.PI,\n    );\n    ctx.fill();\n}\n\nfunction drawBlueRing(ctx, { x, y }) {\n    const { tileSize } = context.board;\n    ctx.beginPath();\n    ctx.strokeStyle = 'rgb(24, 24, 160)';\n    ctx.lineWidth = 0.1 * tileSize;\n    ctx.arc(\n        x + tileSize / 2,\n        y + tileSize / 2,\n        0.4 * tileSize,\n        0, 2 * Math.PI,\n    );\n    ctx.stroke();\n}\n\nfunction drawRedRing(ctx, { x, y }) {\n    const { tileSize } = context.board;\n    ctx.beginPath();\n    ctx.strokeStyle = 'rgb(160, 24, 24)';\n    ctx.lineWidth = 0.1 * tileSize;\n    ctx.arc(\n        x + tileSize / 2,\n        y + tileSize / 2,\n        0.4 * tileSize,\n        0, 2 * Math.PI,\n    );\n    ctx.stroke();\n}\n\nfunction drawBoard(ctx) {\n    const { tileSize } = context.board;\n    const startX = context.board.canvasX % tileSize;\n    const startY = context.board.canvasY % tileSize;\n    const endX = context.canvas.width;\n    const endY = context.canvas.height;\n\n    ctx.strokeStyle = 'rgb(160, 160, 160)';\n    ctx.lineWidth = 1;\n\n    for (let x = startX; x <= endX; x += tileSize) {\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, endY);\n        ctx.stroke();\n    }\n\n    for (let y = startY; y <= endY; y += tileSize) {\n        ctx.beginPath();\n        ctx.moveTo(0, y);\n        ctx.lineTo(endX, y);\n        ctx.stroke();\n    }\n}\n\nfunction drawPhasePiece(ctx) {\n    const { phase } = context.events;\n    const { move } = context.draw;\n\n    const {\n        tileSize,\n        isBlueTurn,\n        grid,\n    } = context.board;\n\n    const canvasRect = context.canvas.getBoundingClientRect();\n\n    const mouseX = context.events.mouseMove.clientX - canvasRect.left;\n    const mouseY = context.events.mouseMove.clientY - canvasRect.top;\n\n    if (phase === OPPONENT_PHASE) {\n        return;\n    }\n\n    if (phase === PICK_DISK_PHASE) {\n        return;\n    }\n\n    if (phase === DROP_DISK_PHASE) {\n        const x = mouseX - tileSize / 2;\n        const y = mouseY - tileSize / 2;\n\n        if (isBlueTurn) {\n            drawBlueDisk(ctx, { x, y });\n        } else {\n            drawRedDisk(ctx, { x, y });\n        }\n    }\n\n    if (phase === DROP_RING_PHASE) {\n        const x = mouseX - tileSize / 2;\n        const y = mouseY - tileSize / 2;\n\n        if (isBlueRing(grid[move.diskTo])) {\n            drawBlueRing(ctx, { x, y });\n        } else {\n            drawRedRing(ctx, { x, y });\n        }\n    }\n}\n\nfunction drawPossibleMoves(ctx) {\n    const { tileSize } = context.board;\n    const { phase } = context.events;\n    let highlightedTiles = new Set();\n\n    if (phase === OPPONENT_PHASE) {\n        return;\n    }\n\n    if (phase === PICK_DISK_PHASE) {\n        highlightedTiles = context.draw.pickDiskMoves;\n    }\n\n    if (phase === DROP_DISK_PHASE) {\n        highlightedTiles = context.draw.dropDiskMoves;\n    }\n\n    if (phase === DROP_RING_PHASE) {\n        highlightedTiles = context.draw.dropRingMoves;\n    }\n\n    highlightedTiles.forEach((tile) => {\n        const boardCoords = getCoords(tile);\n        const canvasCoords = convertBoardToCanvasCoords(boardCoords);\n\n        ctx.fillStyle = 'rgb(16, 64, 16)';\n        ctx.fillRect(\n            canvasCoords.x,\n            canvasCoords.y,\n            tileSize,\n            tileSize,\n        );\n    });\n}\n\nfunction drawOrigin(ctx) {\n    const { canvasX, canvasY, tileSize } = context.board;\n\n    ctx.strokeStyle = 'rgb(255, 255, 255)';\n    ctx.lineWidth = 3;\n\n    ctx.beginPath();\n    ctx.moveTo(canvasX - tileSize, canvasY);\n    ctx.lineTo(canvasX + tileSize, canvasY);\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.moveTo(canvasX, canvasY - tileSize);\n    ctx.lineTo(canvasX, canvasY + tileSize);\n    ctx.stroke();\n}\n\nfunction drawMouseHighlight(ctx) {\n    const { canvasX, canvasY, tileSize } = context.board;\n    const canvasRect = context.canvas.getBoundingClientRect();\n\n    const mouseX = context.events.mouseMove.clientX - canvasRect.left;\n    const mouseY = context.events.mouseMove.clientY - canvasRect.top;\n\n    const canvasMouseX = mouseX - canvasX;\n    const canvasMouseY = mouseY - canvasY;\n\n    const highlightX = canvasMouseX > 0\n        ? mouseX - canvasMouseX % tileSize\n        : mouseX - canvasMouseX % tileSize - tileSize;\n\n    const highlightY = canvasMouseY > 0\n        ? mouseY - canvasMouseY % tileSize\n        : mouseY - canvasMouseY % tileSize - tileSize;\n\n    ctx.fillStyle = 'rgb(48, 48, 48)';\n    ctx.fillRect(\n        highlightX,\n        highlightY,\n        tileSize,\n        tileSize,\n    );\n}\n\nfunction drawBlueDisks(ctx) {\n    const { blueDisks, isBlueTurn } = context.board;\n    const { move } = context.draw;\n\n    blueDisks.forEach((blueDisk) => {\n        const boardCoords = getCoords(blueDisk);\n        const canvasCoords = convertBoardToCanvasCoords(boardCoords);\n\n        if (move.diskFrom === blueDisk) {\n            return;\n        }\n\n        drawBlueDisk(ctx, canvasCoords);\n    });\n\n    if (move.diskTo > 0 && isBlueTurn) {\n        const boardCoords = getCoords(move.diskTo);\n        const canvasCoords = convertBoardToCanvasCoords(boardCoords);\n        drawBlueDisk(ctx, canvasCoords);\n    }\n}\n\nfunction drawRedDisks(ctx) {\n    const { redDisks, isBlueTurn } = context.board;\n    const { move } = context.draw;\n\n    redDisks.forEach((redDisk) => {\n        const boardCoords = getCoords(redDisk);\n        const canvasCoords = convertBoardToCanvasCoords(boardCoords);\n\n        if (move.diskFrom === redDisk) {\n            return;\n        }\n\n        drawRedDisk(ctx, canvasCoords);\n    });\n\n    if (move.diskTo > 0 && !isBlueTurn) {\n        const boardCoords = getCoords(move.diskTo);\n        const canvasCoords = convertBoardToCanvasCoords(boardCoords);\n        drawRedDisk(ctx, canvasCoords);\n    }\n}\n\nfunction drawBlueRings(ctx) {\n    const { blueRings } = context.board;\n    const { move } = context.draw;\n\n    blueRings.forEach((blueRing) => {\n        const boardCoords = getCoords(blueRing);\n        const canvasCoords = convertBoardToCanvasCoords(boardCoords);\n\n        if (move.diskTo === blueRing) {\n            return;\n        }\n\n        drawBlueRing(ctx, canvasCoords);\n    });\n}\n\nfunction drawRedRings(ctx) {\n    const { redRings } = context.board;\n    const { move } = context.draw;\n\n    redRings.forEach((redRing) => {\n        const boardCoords = getCoords(redRing);\n        const canvasCoords = convertBoardToCanvasCoords(boardCoords);\n\n        if (move.diskTo === redRing) {\n            return;\n        }\n\n        drawRedRing(ctx, canvasCoords);\n    });\n}\n\nfunction drawPieces(ctx) {\n    drawBlueDisks(ctx);\n    drawRedDisks(ctx);\n    drawBlueRings(ctx);\n    drawRedRings(ctx);\n}\n\nfunction redraw() {\n    console.log('redraw');\n\n    const ctx = context.canvas.getContext('2d');\n\n    ctx.clearRect(0, 0, context.canvas.width, context.canvas.height);\n\n    drawPossibleMoves(ctx);\n    drawBoard(ctx);\n    drawOrigin(ctx);\n    drawMouseHighlight(ctx);\n    drawPieces(ctx);\n    drawPhasePiece(ctx);\n}\n\nmodule.exports = { redraw };\n\n\n//# sourceURL=webpack:///./src/draw.js?");

/***/ }),

/***/ "./src/event.js":
/*!**********************!*\
  !*** ./src/event.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const { context } = __webpack_require__(/*! ./context */ \"./src/context.js\");\nconst { redraw } = __webpack_require__(/*! ./draw */ \"./src/draw.js\");\nconst { generateMoves, makeMove } = __webpack_require__(/*! ./move */ \"./src/move.js\");\nconst { intDiv } = __webpack_require__(/*! ./util */ \"./src/util.js\");\nconst {\n    OPPONENT_PHASE,\n    PICK_DISK_PHASE,\n    DROP_DISK_PHASE,\n    DROP_RING_PHASE,\n    MAX_DISKS,\n    GRID_SIZE,\n} = __webpack_require__(/*! ./constants */ \"./src/constants.js\");\n\nfunction getGridIndexAtCanvasPos({ x, y }) {\n    const { canvasX, canvasY, tileSize } = context.board;\n\n    const gridXRaw = x - canvasX > 0\n        ? intDiv(x - canvasX, tileSize)\n        : intDiv(x - canvasX, tileSize) - 1;\n    const gridX = gridXRaw + GRID_SIZE / 2;\n\n    const gridYRaw = y - canvasY > 0\n        ? intDiv(y - canvasY, tileSize)\n        : intDiv(y - canvasY, tileSize) - 1;\n    const gridY = gridYRaw + GRID_SIZE / 2;\n\n    const gridIndex = GRID_SIZE * gridY + gridX;\n\n    console.log(`grid: ${gridX} ${gridY}, gridIndex: ${gridIndex}`);\n\n    return gridIndex;\n}\n\nfunction generatePickDiskMoves() {\n    const { generatedMoves } = context.draw;\n\n    context.draw.pickDiskMoves = new Set();\n    for (let k = 0; k < generatedMoves.length; k += 1) {\n        if (generatedMoves[k].diskFrom !== -1) {\n            context.draw.pickDiskMoves.add(generatedMoves[k].diskFrom);\n        }\n    }\n}\n\nfunction generateDropDiskMoves() {\n    const { generatedMoves } = context.draw;\n\n    context.draw.dropDiskMoves = new Set();\n    for (let k = 0; k < generatedMoves.length; k += 1) {\n        context.draw.dropDiskMoves.add(generatedMoves[k].diskTo);\n    }\n}\n\nfunction generateDropRingMoves(diskFrom, diskTo) {\n    const { generatedMoves } = context.draw;\n\n    console.log('generateDropDiskMoves');\n\n    context.draw.dropRingMoves = new Set();\n    for (let k = 0; k < generatedMoves.length; k += 1) {\n        if (diskFrom === generatedMoves[k].diskFrom && diskTo === generatedMoves[k].diskTo) {\n            console.log(generatedMoves[k]);\n            context.draw.dropRingMoves.add(generatedMoves[k].ringTo);\n        }\n    }\n}\n\nfunction handleKeyDown(event) {\n    console.log(`handleKeyDown, keyCode: ${event.keyCode}`);\n\n    const { phase } = context.events;\n\n    if (event.keyCode === 70 && phase === OPPONENT_PHASE) { // f key\n        context.draw.generatedMoves = generateMoves(context.board);\n        generatePickDiskMoves();\n        generateDropDiskMoves();\n\n        context.draw.move = {\n            diskFrom: -1,\n            diskTo: -1,\n            ringTo: -1,\n        };\n\n        if (context.board.activeDisks.size < MAX_DISKS) {\n            context.events.phase = DROP_DISK_PHASE;\n        } else {\n            context.events.phase = PICK_DISK_PHASE;\n        }\n\n        redraw();\n\n        console.log(context.draw.generatedMoves);\n        console.log(`transitioned to phase: ${context.events.phase}`);\n\n        console.log('pick disk moves');\n        console.log(context.draw.pickDiskMoves);\n        console.log('drop disk moves');\n        console.log(context.draw.dropDiskMoves);\n        console.log('drop ring moves');\n        console.log(context.draw.dropRingMoves);\n    }\n}\n\nfunction handleMouseClick(event) {\n    console.log('handleMouseClick');\n\n    const { phase } = context.events;\n\n    if (phase === OPPONENT_PHASE) {\n        console.log('opponent phase, mouse click processing aborted');\n        return;\n    }\n\n    const { pickDiskMoves, dropDiskMoves, dropRingMoves } = context.draw;\n\n    const canvasRect = context.canvas.getBoundingClientRect();\n\n    const mouseX = event.clientX - canvasRect.left;\n    const mouseY = event.clientY - canvasRect.top;\n\n    const gridIndex = getGridIndexAtCanvasPos({ x: mouseX, y: mouseY });\n\n    console.log(`mouse: ${mouseX} ${mouseY}, click count: ${event.detail}`);\n\n    if (event.detail !== 2) {\n        return;\n    }\n\n    if (phase === PICK_DISK_PHASE) {\n        if (pickDiskMoves.has(gridIndex)) {\n            console.log('pick disk phase legal move');\n            context.draw.move.diskFrom = gridIndex;\n            context.events.phase = DROP_DISK_PHASE;\n\n            redraw();\n        } else {\n            console.log('pick disk phase illegal move');\n        }\n    } else if (phase === DROP_DISK_PHASE) {\n        if (dropDiskMoves.has(gridIndex)) {\n            console.log('drop disk phase legal move');\n            context.draw.move.diskTo = gridIndex;\n            context.events.phase = DROP_RING_PHASE;\n            generateDropRingMoves(context.draw.move.diskFrom, context.draw.move.diskTo);\n\n            redraw();\n        } else {\n            console.log('drop disk phase illegal move');\n        }\n    } else if (phase === DROP_RING_PHASE) {\n        if (dropRingMoves.has(gridIndex)) {\n            console.log('drop ring phase legal move');\n            context.draw.move.ringTo = gridIndex;\n            makeMove(context.board, context.draw.move);\n\n            context.events.phase = OPPONENT_PHASE;\n            context.board.isBlueTurn = !context.board.isBlueTurn;\n\n            context.draw.move = {\n                diskFrom: -1,\n                diskTo: -1,\n                ringTo: -1,\n            };\n\n            redraw();\n        } else {\n            console.log('drop ring phase illegal move');\n        }\n    }\n}\n\nfunction handleMouseDown(event) {\n    console.log('handleMouseDown');\n    console.log(event);\n\n    const {\n        screenX,\n        screenY,\n    } = event;\n\n    context.events.mouseDown = {\n        screenX,\n        screenY,\n    };\n\n    context.events.isMouseDown = true;\n}\n\nfunction handleMouseMove(event) {\n    if (context.events.isMouseDown) {\n        const deltaX = event.screenX - context.events.mouseMove.screenX;\n        const deltaY = event.screenY - context.events.mouseMove.screenY;\n        context.board.canvasX += deltaX;\n        context.board.canvasY += deltaY;\n    }\n\n    const {\n        clientX,\n        clientY,\n        screenX,\n        screenY,\n    } = event;\n\n    context.events.mouseMove = {\n        clientX,\n        clientY,\n        screenX,\n        screenY,\n    };\n\n    redraw();\n}\n\nfunction handleMouseUp(event) {\n    console.log('handleMouseUp');\n    console.log(context);\n\n    const {\n        screenX,\n        screenY,\n    } = event;\n\n    context.events.mouseUp = {\n        screenX,\n        screenY,\n    };\n\n    context.events.isMouseDown = false;\n}\n\nfunction handleMouseWheel(event) {\n    console.log(`handleMouseWheel: ${event.deltaY}`);\n\n    const canvasWidth = context.canvas.width;\n    const canvasHeight = context.canvas.height;\n    const mapCanvasX = context.board.canvasX;\n    const mapCanvasY = context.board.canvasY;\n\n    let { tileSize } = context.board;\n\n    const centerTileDistanceX = (canvasWidth / 2 - mapCanvasX) / tileSize;\n    const centerTileDistanceY = (canvasHeight / 2 - mapCanvasY) / tileSize;\n\n    tileSize -= event.deltaY;\n\n    if (tileSize > 100) {\n        tileSize = 100;\n    }\n\n    if (tileSize < 10) {\n        tileSize = 10;\n    }\n\n    context.board.tileSize = tileSize;\n\n    context.board.canvasX = canvasWidth / 2 - tileSize * centerTileDistanceX;\n    context.board.canvasY = canvasHeight / 2 - tileSize * centerTileDistanceY;\n\n    redraw();\n}\n\nmodule.exports = {\n    handleKeyDown,\n    handleMouseClick,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    handleMouseWheel,\n};\n\n\n//# sourceURL=webpack:///./src/event.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const { context, resetContext } = __webpack_require__(/*! ./context */ \"./src/context.js\");\nconst { initBoard } = __webpack_require__(/*! ./board */ \"./src/board.js\");\nconst { redraw } = __webpack_require__(/*! ./draw */ \"./src/draw.js\");\nconst {\n    handleKeyDown,\n    handleMouseClick,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    handleMouseWheel,\n} = __webpack_require__(/*! ./event */ \"./src/event.js\");\n\nfunction resizeCanvas() {\n    const canvas = document.getElementById('gameCanvas');\n\n    canvas.width = 0.8 * window.innerWidth;\n    canvas.height = 0.8 * window.innerHeight;\n\n    context.canvas = canvas;\n\n    redraw();\n}\n\nfunction restartGame(x) {\n    console.log(x);\n\n    resetContext();\n    initBoard(context.board);\n    resizeCanvas();\n}\n\nwindow.addEventListener('resize', resizeCanvas);\n\nwindow.addEventListener('keydown', handleKeyDown);\nwindow.addEventListener('click', handleMouseClick);\nwindow.addEventListener('mousedown', handleMouseDown);\nwindow.addEventListener('mousemove', handleMouseMove);\nwindow.addEventListener('mouseup', handleMouseUp);\nwindow.addEventListener('wheel', handleMouseWheel);\n\nwindow.onload = () => restartGame('game started');\nwindow.restartGame = restartGame;\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/move.js":
/*!*********************!*\
  !*** ./src/move.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const { getRandomInt } = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\nconst {\n    addBlueDisk,\n    addBlueRing,\n    addRedDisk,\n    addRedRing,\n    deleteBlueDisk,\n    deleteBlueRing,\n    deleteRedDisk,\n    deleteRedRing,\n    isBlueRing,\n} = __webpack_require__(/*! ./board */ \"./src/board.js\");\nconst {\n    BLUE_DISK,\n    DROP_DISK,\n    EMPTY,\n    GRID_SIZE,\n    MARKED,\n    MAX_DISKS,\n    MAX_RINGS,\n    RED_DISK,\n} = __webpack_require__(/*! ./constants */ \"./src/constants.js\");\n\nfunction isIndexEmptyOrEmptied(board, index, diskFrom) {\n\n    if (diskFrom === 33411 && index === 32899) {\n        console.log('fffffffffffffffffffffffffffffffffffffffffffffff');\n        console.log(board.grid[index]);\n    }\n\n    if (board.grid[index] === EMPTY) {\n        return true;\n    }\n\n    if (board.grid[index] === MARKED) {\n        return false;\n    }\n\n    if (index === diskFrom) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction generateAdjacentEmptyIndices(board, index, diskFrom) {\n    const { grid, duplicationMarkers } = board;\n\n    const emptyIndices = [];\n\n    let i = index - GRID_SIZE;\n    if (isIndexEmptyOrEmptied(board, i, diskFrom)) {\n        emptyIndices.push(i);\n\n        duplicationMarkers.push({ index: i, piece: grid[i] });\n        grid[i] = MARKED;\n    }\n\n    i = index - 1;\n    if (isIndexEmptyOrEmptied(board, i, diskFrom)) {\n        emptyIndices.push(i);\n\n        duplicationMarkers.push({ index: i, piece: grid[i] });\n        grid[i] = MARKED;\n    }\n\n    i = index + 1;\n    if (isIndexEmptyOrEmptied(board, i, diskFrom)) {\n        emptyIndices.push(i);\n\n        duplicationMarkers.push({ index: i, piece: grid[i] });\n        grid[i] = MARKED;\n    }\n\n    i = index + GRID_SIZE;\n    if (isIndexEmptyOrEmptied(board, i, diskFrom)) {\n        emptyIndices.push(i);\n\n        duplicationMarkers.push({ index: i, piece: grid[i] });\n        grid[i] = MARKED;\n    }\n\n    return emptyIndices;\n}\n\nfunction generateRingMoves(board, ring, compareRing, diskFrom, moves) {\n    if (ring === compareRing) {\n        return;\n    }\n\n    const emptyIndices = generateAdjacentEmptyIndices(board, compareRing, diskFrom);\n    for (let k = 0; k < emptyIndices.length; k += 1) {\n        moves.push({\n            diskFrom,\n            diskTo: ring,\n            ringTo: emptyIndices[k],\n        });\n    }\n}\n\nfunction removeDuplicationMarkers(board) {\n    const { duplicationMarkers, grid } = board;\n    duplicationMarkers.forEach(({ index, piece }) => {\n        grid[index] = piece;\n    });\n\n    board.duplicationMarkers = [];\n}\n\n// populates the move list for the given ring.\nfunction generateDiskDropMoves(board, ring, diskFrom, moves) {\n    const { blueRings, redRings } = board;\n\n    blueRings.forEach((blueRing) => {\n        generateRingMoves(board, ring, blueRing, diskFrom, moves);\n    });\n\n    redRings.forEach((redRing) => {\n        generateRingMoves(board, ring, redRing, diskFrom, moves);\n    });\n\n    removeDuplicationMarkers(board);\n}\n\nfunction generateRemovableDisks(board) {\n    // TODO: prevents disk islands being formed\n\n    const removableDisks = board.activeDisks;\n\n    return removableDisks;\n}\n\nfunction generateDiskTransferMoves(board, ring, moves) {\n    const removableDisks = generateRemovableDisks(board);\n\n    removableDisks.forEach((removableDisk) => {\n        generateDiskDropMoves(board, ring, removableDisk, moves);\n    });\n}\n\nfunction generateMovesForRings(board, rings, moves) {\n    rings.forEach((ring) => {\n        if (board.activeDisks.size < MAX_DISKS) {\n            generateDiskDropMoves(board, ring, DROP_DISK, moves);\n        } else {\n            generateDiskTransferMoves(board, ring, moves);\n        }\n    });\n}\n\nfunction generateMoves(board) {\n    console.log('generateMoves');\n    console.log(board.grid[32899]);\n\n    const moves = [];\n\n    board.activeDisks = board.isBlueTurn\n        ? board.blueDisks\n        : board.redDisks;\n\n    generateMovesForRings(board, board.blueRings, moves);\n    generateMovesForRings(board, board.redRings, moves);\n\n    return moves;\n}\n\nfunction generateRandomMove(board) {\n    const move = {};\n\n    board.activeDisks = board.isBlueTurn\n        ? board.blueDisks\n        : board.redDisks;\n\n    if (board.activeDisks.size < MAX_DISKS) {\n        move.diskFrom = -1;\n    } else {\n        // TODO: make disk/ring sets arrays to avoid costly conversions\n        move.diskFrom = new Array(board.activeDisks)[getRandomInt(MAX_DISKS)];\n    }\n\n    const relevantRings = Array(board.blueRings).concat(Array(board.redRings));\n\n    const maxRings2 = 2 * MAX_RINGS;\n    const r = getRandomInt(maxRings2);\n    move.diskTo = relevantRings.splice(r, 1)[0];\n\n    findRingTo: {\n        for (let k = 0; k < maxRings2 - 1; k += 1) {\n            const ringIndex = getRandomInt(relevantRings.length);\n            const ring = relevantRings.splice(ringIndex, 1)[0];\n\n            const directions = [1, -1, GRID_SIZE, -GRID_SIZE];\n            for (let l = 0; l < 4; l += 1) {\n                const dirIndex = getRandomInt(directions.length);\n                const dir = directions.splice(dirIndex, 1)[0];\n\n                if (board.grid[ring + dir] === EMPTY) {\n                    break findRingTo;\n                }\n            }\n        }\n    }\n}\n\nfunction makeMove(board, { diskFrom, diskTo, ringTo }) {\n    console.log(`make move ${JSON.stringify({ diskFrom, diskTo, ringTo })}`);\n\n    const nextDisk = board.isBlueTurn\n        ? BLUE_DISK + board.blueDisks.size\n        : RED_DISK + board.redDisks.size;\n\n    const { addDisk, deleteDisk } = board.isBlueTurn\n        ? { addDisk: addBlueDisk, deleteDisk: deleteBlueDisk }\n        : { addDisk: addRedDisk, deleteDisk: deleteRedDisk };\n\n    const ringToBeDeleted = board.grid[diskTo];\n    const { addRing, deleteRing } = isBlueRing(ringToBeDeleted)\n        ? { addRing: addBlueRing, deleteRing: deleteBlueRing }\n        : { addRing: addRedRing, deleteRing: deleteRedRing };\n\n    const deletedDisk = diskFrom > 0\n        ? deleteDisk(board, diskFrom)\n        : nextDisk;\n    const deletedRing = deleteRing(board, diskTo);\n\n    addDisk(board, deletedDisk, diskTo);\n    addRing(board, deletedRing, ringTo);\n\n    console.log(board.redRings);\n\n    return 1;\n}\n\n// TODO: stub\n// eslint-disable-next-line\nfunction unmakeMove(board, { diskFrom, diskTo, ringTo }) {\n    return 1;\n}\n\nmodule.exports = {\n    generateMoves,\n    generateRandomMove,\n    makeMove,\n    unmakeMove,\n};\n\n\n//# sourceURL=webpack:///./src/move.js?");

/***/ }),

/***/ "./src/util.js":
/*!*********************!*\
  !*** ./src/util.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Division function which behaves like most other languages when dividing\n// integers. E.g. intDiv(-2044, 1000) returns -2.\nfunction intDiv(dividend, divisor) {\n    return (dividend / divisor) | 0;\n}\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n}\n\nmodule.exports = {\n    getRandomInt,\n    intDiv,\n};\n\n\n//# sourceURL=webpack:///./src/util.js?");

/***/ })

/******/ });